# Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя. 
# За один ход игрок может добавить в одну из куч (по своему выбору) один камень или увеличить количество камней в куче в два раза. 
# Например, пусть в одной куче 10 камней, а в другой 5 камней; такую позицию в игре будем обозначать (10, 5). 
# Тогда за один ход можно получить любую из четырёх позиций: (11, 5), (20, 5), (10, 6), (10, 10). 
# Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.
# Игра завершается в тот момент, когда суммарное количество камней в кучах становится не менее 77. 
# Победителем считается игрок, сделавший последний ход, то есть первым получивший такую позицию, при которой в кучах будет 77 или больше камней.
# В начальный момент в первой куче было семь камней, во второй куче  — S камней; 1 ≤ S ≤ 69.
# Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. 
# Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой ситуации, которая ему может встретиться при различной игре противника. 
# В описание выигрышной стратегии не следует включать ходы играющего по этой стратегии игрока, не являющиеся для него безусловно выигрышными, 
# то есть не являющиеся выигрышными независимо от игры противника.

# 19) Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите минимальное значение S, когда такая ситуация возможна.

# 20) Найдите два таких значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:
# —  Петя не может выиграть за один ход;
# —  Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.

# 3) Найдите минимальное значение S, при котором одновременно выполняются два условия:
# —  у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
# —  у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.

def v1(a, b):
    return ((a+b+1>=77) or (a*2+b>=77) or (b+1+a>=77) or (a+b*2>=77)) and (a<=69) and (b<=69)
def p1(a, b):
    return v1(a+1, b) and v1(a*2, b) and v1(a, 1+b) and v1(a, b*2) and not(v1(a, b))
def v2(a, b):
    return p1(a+1, b) or p1(a*2, b) or p1(a, b+1) or p1(a, b*2) 
# def p2(a,b):
#     return (v2(a+1, b) or v2(a*2, b) or v2(a, b*2) or v2(a, b+1)) and (v1(a+1, b) or v2(a+1)) and (v1(a+4) or v2(a+4)) and (v1(a*5) or v2(a*5))
def wr_p1(a,b):
    return v1(a+1, b) or v1(a*2, b) or v1(a, 1+b) or v1(a, b*2) and not(v1(a, b))


a=[]
b=7
for s in range(1, 70):
    if wr_p1(s, b) == 1:
        a.append(s)
print(a, min(a))

w=[]
for s in range(1, 70):
    if v2(s, b) == 1:
        w.append(s)
print(w)

# c=[] 30
# for s in range(1, 68):
#     if p2(s) == 1:
#         c.append(s)
# print(c, min(c))